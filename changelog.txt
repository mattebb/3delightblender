v21.5.0 8/18/17
* Heat grid now available for Blender smoke sims cached with OpenVDB
* RIB formatting now works with IPR renders
* Icons have been added to all ui panels that contain RenderMan settings
* Numerous fixes to the preset browser
* Light rig presets now have correct world rotation
* Can now update crop window during IPR
* Viewport diffuse and specular color controls now work
* Auto updater has been temporarily removed
* Materials can now be linked directly to an object instance
* Update a few paths, URLs, and other details
* Spell RenderMan with bi-caps in user visible strings
* RenderManForBlender is now being released under the MIT license
* Code contributed by adminradio, a-e-k, bsavery, jdent02, and Lightye

v21.4.0 5/16/17
* Support for PxrHairColor (per strand index)
* Preset browser integration.  Found under the RenderMan tab in the View3D menu (press T).  This is an implementation of the same preset browser in RfM.  Allows you to share shader networks with RfM, and save and import your favorite materials, and apply them to selected objects.
* Updates to the auto-updater.
* A couple fixes and optimizations to baking.

v21.3.0 4/15/17
* Auto updater for addon added.  In the addon preferences there is settings for auto updating.  If
left to the default it will check once a day with github and download any changes.
Thanks to CG Cookie for contributing the example and JDent for implementing
https://github.com/CGCookie/blender-addon-updater
* Portal lights now must be parented under the corresponding Hemi light in the outliner.  They need this to get the rotation from the hemi light.
* Material Baking is enabled now.  To use insert a PxrBakeTexture node in a shader graph and use the bake button.  (thanks to JDent)
* OpenVDB files can be exported in place of an object or empty under the "Geometry Source" on the object properties
* An object can be exported as an RiVolume cube using the bounding box under the "Primitive Type" in the object properties.
* Fix Rotation of directional lights and other lights
* Doing undo (ctrl+z) in IPR should no longer cause a crash.
* MatteID can be set per object in the object properties.
* Rib files now default to binary (smaller, faster) and can be zipped.  See the advanced render properties
* Per lobe outputs for PxrSurface are available for AOV's
* Various IPR fixes (MUCH MORE STABLE AND FASTER for material changes)
* Fix IES profiles for lights
* A few blender panels (example physics settings) were hidden, show them
* Output settings notes when rendering to IT, view in the image properties.
* An "id" primvar is available for particles (and hair) allowing random variations with PxrVary node.
* innumerable other bug fixes.
* As always thanks to jdent02 and rgordon for their help.


v21.2.0 11/8/16
* NOTE SIGNIFICANT CHANGE - Nodetrees are moved to use the built in cycles nodetree!
  * This will help file linking and allow node groups.
  * However you will have to redo your nodetrees.
  * Cycles nodes can be used with RenderMan shaders.
     * this is still a work in progress.  Some Cycles nodes will not function properly (or at all) with RenderMan.
  * Using "add renderman nodetree" will attempt to convert and hook up your cycles nodetree.
     * this is still a work in progress and won't give you an exact conversion.
* New PxrSurface lobe AOV's.  Due to changes in codebase you will have to reassign any existing AOV's to avoid export errors.
* Support for RenderMan 21 features - specifically new shaders and lights.
* Portal lights are supported.
* Light filters are added - using a light and set it to "Filter type", then link the filters to your lights.
* Sample and display filters are now under the scene properties.
* Support for all Projection plugins (VR rendering with OmniDirectional!) under the camera props.
* Icons are updated to renderman 21 icons.
* Render checkpointing and recovery are now supported with external rendering.
* Fix for external rendering with spaces in the filename.
* Thanks to rgordon, aek, jdent02, jdbener for contributions.


v0.9.0 7/13/16
* Many minor bug fixes
* Texture sequences should work correctly. (use $F4 in texture name)
* Linking files will pull in the material node tree from other files now automatically.  Appending you still must attach the node tree.
* RMANTREE setting is more sensible and user friendly.  Set RMANTREE in addon preferences.  No need to worry about environment variables.
* RIB archiving works.  Create a rib archive of your geometry to bake rib gen or export rib for other uses. (thanks to rgordon)
* In the View3D toolbar now is a RenderMan toolbar tab, allowing many quick operations for convenience
* Motion Blur now uses a shutter angle instead of 0-1
* Default settings now match RenderMan for Maya
* Light and object panels (in the scene properties)
	* Here you can create and edit light and object groups
	* Light and object groups can then be used in trace set settings (on lights etc) and in AOVs
	* Also this is a convenient place to do all the light linking (works in IPR)
	* During IPR light properties can be edited en masse here.  Also mute and solo lights
* Render Selected button - quickly lets you render only a set of objects selected
* Sampling presets to quickly change sampling settings (thanks rgordon)
* Incremental rendering can now be disabled (it's on by default)
* Rib generation should be more stable
* default OUT directory is now /tmp
* cache sizes options are now available in advanced scene settings
* curves can render as ribbons now or round curves (default)
* hair width correctly uses the Cycles settings rather than duplicating
* High resolution smoke is supported (finally)
* Darkfalloff is supported (thanks jdent) RenderMan 20.9 feature
* Openexr renders can go to multilayer exrs for compositing (thanks Jdent)
* some example files are provided - accesible though toolbar
* Inline RIB boxes can now be inserted into the rib stream in various places (scene, world, object settings)
* Major Render settings and workflow overhaul and simplification!
	* Regular renders can be sent to Blender or 'it' as before, no need to set display driver
	* External Renders are now an option for rendering outside of Blender.  These renders will NOT load results back into blender.  This allows users to spool batch renders to Pixar's LocalQueue or Tractor for network rendering.  See settings in Scene properties.
	* When externally rendering crossframe denoise is supported.
* Overhaul of layers UI, simple version, then switch to RenderMan passes for more advanced options.
* DeepExr and multilayer outputs are supported.



v0.8.0 03/22/2016
* Lots of bug fixes!
* Fix an issue with artifacts in denoise
* Added controls for aperture shape to camera
* Open last rib button for debugging
* UDIM textures fix
* Adding and Deleting lights in IPR should work now
* Material color is set in Blender for viewport help
* Support a "World" light that can be either daylight or an env map
* Shader Parameters get soft min and maxes (can set values manually)
* Point lights correct when moving in IPR
* Copy and Pasting nodes should work
* !!! Longstanding IPR bug, the initial rendering with IPR no longer locks up Blender.

v0.7.0 11/06/2015
* Light shapes for area lights area now a selector control not on the shader.  The shader setting will happen automagically.  Also the shape for distant/point/spot lights should be correct now.

v0.6.0 8/20/2015
* Light linking!
* reconfigured rib generation.  The details are technical but in simple terms: output first the data blocks then instances of them.  The upshot is that rib generation takes about the same time, however we fixed a few issue with smoke/hair/etc having stale data or incorrect motion.  Also now rib generation caching should work correctly in all cases, and generating ribs with that on (and nothing changed) should be very fast.
* Light linking and adding lights works while Interactive Rendering.

v0.5.0 8/20/2015
* Bunch of UI cleanup (object properties from @rendermouse)
* Backed out some multi-material changes until we have a proper bxdf switch node
* Custom AOVs as well as specifying a lpe light group or object group works (please let me know any issues with this)
* Little prettier shader swatch previews
* Crop windows/borders work.

v0.4.0 8/3/2015
* OSL should now support IPR
* more example files
* RIB generation rewrite.  ~6x speedup creating rib for gooseberry benchmark
    * uv's across multi-material objects should now work
    * multi-material objects now use the same geometry instead of splitting it.
    * however the current limitation is that multi-material objects can't be emissive
* Metaball support (Thanks to @rendermouse!)
* better deformation and multi-segment motion blur ribs.

v0.3.0 7/31/2015
* OSL nodes experimental support!  Currently does not support IPR thanks to @mwy5310
* example files directory (will be more added)

v0.2.7 7/13/2015
* IPR stability and speed is increased significantly.
* Collapsing of parameters in node tree.

v0.2.7 7/13/2015
* Bunch of bug fixes and speedups to rib gen
* Move DOF settings to camera
* Textures are made to repeat (periodic) by default
* Motion Blur settings are now in a separate panel
* PxrTexture Nodes get an automatic Manifold attached.

v0.2.6 7/13/2015
* Cleanup ribgen a bit
* Re-enabled Archive paths
* Objects Geometry is output to a rib archive either under $SCENE/archives/static or $SCENE/archives/$FRAME_NUM if animated.
* Objects Geometry is only output if the object is updated.  For example if a scene is created, rendered, then
re-rendered, the geometry would not be re-ribgenned.  However if the object was updated in blender, it would update the rib.  This will greatly speed ribgens but may cause issues if somehow an object is updated but the timestamp not updated.
In this case the archives directory can simply be removed, or the objects rib archive individually.

v0.2.5 7/13/2015
* INTERACTIVE RENDERING IS HERE!!!!
	- To start (for now), you have to have 'it' installed with the RenderMan Studio package.
	- Go to the scene properties, in the interactive sampling section hit start interactive
	- Only supports material edits, light moves/edits and camera moves for now.

v0.2.4 7/13/2015
* Couple bug fixes:
	- 'it' is autolaunched if you have RMSTREE in your path or RenderMan Studio installed
	- some path issues with textures
* Primary visibility for area lights (Environment lights in particular) is now on by default.
* custom UV's now export correctly

v0.2.3 7/13/2015
* Performance improvements of default settings.
* Integration of AtomicP's curve changes.

v0.2.2 7/09/2015
* Added Support for PxrCamera physical attributes.  In the camera properties click "Use physical Camera"

v0.2.1 7/09/2015
* Added Denoise under the RenderMan Output Settings
* Changed output directory to go under Documents (or My Documents on Windows)/prman_for_blender
	- can be changed under the addon preferences

v0.2.0 7/07/2015
* Basic functionality for RIS rendering present including
	- Lights
	- Node based material trees
	- Hair and other geometry support
	- AOV (Render Passes)

v0.1.1 25/03/2015
* Forked 3delight_blender code to prman for blender
* Changed env variables to use RMANTREE for RenderMan 19.0
* Changed RIB output for 19.0 specific construct (integrator, bxdf, etc)
* TODO - proper shader network support of bxdf/pattern via args files
        - integrator settings and general settings cleanup
        - move to RenderMan python plugin for rib integration
        - lights integration
        - general code cleanup

!!!!! ------------ blender to prman fork -------------- !!!!!

v0.7.5 - 25/04/2012
* Enabled editable output paths, including RIB file export, shadow maps, and point clouds. These path properties support using environment variables, or other blender data variables that are built in to the exporter. Environment variables can be read from outside blender, or default environment variables can be edited from within the Environment Variables panel in Render Properties.
More info at: http://mattebb.com/3delightblender/documentation/
* Added option to either both export RIB and render interactively, or just export the RIB (better for render farms)
* Added choose of Display Drivers - currently accepted are 'auto' (integrated in blender image editor), idisplay, and tiff.
* Added access to Hider settings. Using idisplay with the raytrace hider allows progressive rendering.

Fixes:
* Updated geometry export to work with new the 'bmesh' mesh data structure. Ngons are exported natively.
* Updated for changes to blender python API


v0.7.0 - 15/09/2011
* Added pointcloud global illumination method
  Auto-generates a pointcloud as a pre-pass, and adds a lightsource that reads and renders the stored colour information
* Added toggle to enable/disable auto generation of shadow maps/point clouds

Fixes:
* Fixed optimising textures with an empty source path
* Fixed reading primitive variables from modified meshes
* Fixed reading shader parameters with 2 elements (eg float var[2] )
* Fixed bad ordering of shader parameters
* Fixed missing width parameter in particle hair
* Fix for adding textures to lamp shaders
* Ignore errors when scanning for shaders


v0.6.5 - 23/08/2011
* Fix for shadow maps generation on Windows
* Fix for auto-converting image textures to 3dl format


v0.6.4 - 20/08/2011
* Fix for not finding 3delight library correctly on Linux (ubuntu)


v0.6.3 - 11/08/2011
* Fix for environment variables not being found when generating shader list


v0.6.2 - 09/08/2011
* Updated shader UI to dynamically generate a list of all shaders in shader paths to choose from. Also removed necessity to manually 'Initialise Shader Parameters'.
See: http://vimeo.com/27460855

Fixed bugs:
* Bad syntax in subdivisionmesh export when using creases
* Enum properties in shaders were being interpreted as the wrong type
* Particle instances weren't working properly
* Secondary GI panel was invisible
* If native renderman geometry types aren't supported by the exporter, support exporting as a tessellated mesh representation for the time being.


v0.6.0 - 05/07/2011
Added functionality to:
* Export geometry to RIB archives, either manually (file->export) or at render time
* Export animated and/or motion blurred geometry to RIB archives/sequences
* Render objects as procedural geometry - standard and delayed load RIB archives (static or animated sequences), procedural run program, or dynamic load DSO
* Instance objects on particles (using particle location, rotation and size), full transformation and deformation motion blur is supported
* Export primitive variables from meshes:
 - mesh vertex colors as 'color' primvars
 - mesh vertex groups as 'float' primvars
 - mesh UVs as 'float[2]' primvars
 - default UV and vertex colour sets, vertex normals built in
* Export primitive variables from particles:
 - particle properties, eg. velocity, angular velocity, age, lifetime...
 - default 'size' built in
* Export motion blurred blender fluid
* Export blender curve objects as renderman curve primitives (animation not supported yet due to limitations in blender API), or as tessellated mesh/subdivision mesh primitives

* General optimisations and cleanups


v0.54b - 10/05/2011
Fixes:
* Fix problems with malformed paths on Windows


v0.54 - 05/05/2011
Fixes:
* Updated to be compatible with Blender 2.57 release bpy API
* Added manual shader initialisation to work around new limitations in bpy API
* Attempted fixes for windows texture path troubles

New features:
* Motion blurred dynamic hair support

New features contributed by Magnus Löfgren:
* Support for deep shadow maps (Transparent Shadows), on by default
* Trace Motion Blur parameter now accessible, allowing motion blurred shadows


v0.52 - 03/03/2011
* Updated to work with recent Python API property registration changes. Contributed by Jeff Doyle - thanks!


v0.51 - 09/02/2011
* Fixes for path handling on Windows
* Fixes for environment variable handling, addition of 3delight_env.txt


v0.5 - 07/02/2011
* Initial release
